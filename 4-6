# 4-6 セッション管理の不備

## セッションハイジャック
セッションハイジャックとは、第三者がセッションIDを悪用してなりすます行為のことです。

## セッションハイジャックの攻撃手法

- セッションIDの推測

- セッションIDの盗み出し

- セッションID強制

## 理屈と対策

### セッションIDの推測
1. 対象アプリケーションからセッションIDを集める
2. セッションIDの規則性の仮設を立てる
3. 推測したセッションIDを対象アプリケーションで試す
これらのステップで攻撃が成功すると成りすましが行われてしまい、重要情報の閲覧、データや文書の投稿・更新・削除、物品の購入、送金など、
ターゲットのアプリケーションが持つ機能を利用者の権限によりすべて利用できます。

対策としては、セッション管理機構を自作せずに、Webアプリケーション開発ツールが備えるセッション管理機構を利用することです。

### URL埋め込みのセッションID
セッションIDをクッキーに保存せずにURLに埋め込ませる場合があります。
セッションIDをURLに埋め込んでいると、Refererヘッダを経由して、セッションIDが外部に漏洩し、成りすましの原因になる場合があります。
なぜセッションIDをURLに埋め込んでいるのかというと、2000年前後にプライバシー上の理由から「クッキー有害論」が起こりクッキーを避けようという機運があったのと、
NTTドコモ社の携帯電話ブラウザが過去にクッキーに対応していなかったので、携帯電話向けのWebアプリケーションは今でもURL埋め込みのセッションIDが主流であったためです。
対策としては、URL埋め込みのセッションIDを禁止にする設定、あるいはプログラミングをすることです。

### セッションIDの固定化
1. セッションIDを入手する
2. 被害者に対して、1で入手したセッションIDを強制する
3. 被害者は標的アプリケーションにログインする
4. 攻撃者は、被害者に強制したセッションIDを使って標的アプリケーションにアクセスする
これらのステップでターゲットに成りすまし、情報漏えいや、被害者の権限によるアプリケーション機能の悪用が行われます。

対策としては複数あります
- セッションIDをURL埋め込みにしない
- クッキーモンスターバグのあるブラウザを使わない（使わせない）
- クッキーモンスターバグの発生しやすい都道府県型JPドメイン名と地域型JPドメイン名を使わない
- クロスサイト・スクリプティング脆弱性をなくす
- HTTPヘッダ・インジェクション脆弱性をなくす
- その他、クッキーを書き換えられる脆弱性をなくす
